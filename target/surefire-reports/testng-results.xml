<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-23T22:09:43 IST" name="Suite" finished-at="2024-07-23T22:09:59 IST" duration-ms="16070">
    <groups>
    </groups>
    <test started-at="2024-07-23T22:09:43 IST" name="Test" finished-at="2024-07-23T22:09:59 IST" duration-ms="16070">
      <class name="employees.tests.Tests">
        <test-method signature="testCreateEmployee([Ljava.lang.String;)[pri:1, instance:employees.tests.Tests@d9345cd]" started-at="2024-07-23T22:09:48 IST" name="testCreateEmployee" data-provider="ExcelData" finished-at="2024-07-23T22:09:58 IST" duration-ms="9210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2032e725]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEmployee -->
        <test-method signature="testCreateEmployee([Ljava.lang.String;)[pri:1, instance:employees.tests.Tests@d9345cd]" started-at="2024-07-23T22:09:58 IST" name="testCreateEmployee" data-provider="ExcelData" finished-at="2024-07-23T22:09:58 IST" duration-ms="648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6dd20ec9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEmployee -->
        <test-method signature="testCreateEmployee([Ljava.lang.String;)[pri:1, instance:employees.tests.Tests@d9345cd]" started-at="2024-07-23T22:09:58 IST" name="testCreateEmployee" data-provider="ExcelData" finished-at="2024-07-23T22:09:59 IST" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5efe5b25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEmployee -->
        <test-method signature="testCreateEmployee([Ljava.lang.String;)[pri:1, instance:employees.tests.Tests@d9345cd]" started-at="2024-07-23T22:09:59 IST" name="testCreateEmployee" data-provider="ExcelData" finished-at="2024-07-23T22:09:59 IST" duration-ms="145" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@1a6dc5ea]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [7a77] but found [2e89]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [7a77] but found [2e89]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at employees.tests.Tests.testGetEmployee(Tests.java:66)
at employees.tests.Tests.testCreateEmployee(Tests.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEmployee -->
      </class> <!-- employees.tests.Tests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
